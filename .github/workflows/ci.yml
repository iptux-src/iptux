name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

jobs:
  build-on-mac:
    strategy:
      matrix:
        runs-on: [macos-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
    - name: Configure Homebrew cache
      uses: actions/cache@v2
      with:
        path: |
          ~/Library/Caches/Homebrew
        key: ${{ runner.os }}-v1
    - name: brew install
      run: brew install --display-times meson gettext gtk+3 jsoncpp glog gtk-mac-integration
    - name: meson
      run: meson builddir
    - name: build
      run: ninja -v -C builddir
    - name: install
      run: ninja -C builddir install
    - name: test
      run: |
        sudo ifconfig lo0 alias 127.0.0.2 up
        sudo ifconfig lo0 alias 127.0.0.3 up
        sudo ifconfig lo0 alias 127.0.0.4 up
        ninja -v -C builddir test

  build-on-linux:
    strategy:
      matrix:
        runs-on: [ubuntu-18.04, ubuntu-20.04]
        compiler: [g++, clang++]
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
    - name: apt install
      run: sudo apt install -y libgoogle-glog-dev libgtk-3-dev libglib2.0-dev libgstreamer1.0-dev libjsoncpp-dev g++ meson xvfb
    - name: meson
      run: meson builddir
      env:
        CXX: ${{ matrix.compiler }}
    - name: build
      run: ninja -v -C builddir
    - name: install
      run: sudo ninja -C builddir install
    - name: test
      run: |
        xvfb-run -a ./builddir/src/iptux/libiptux_test
        xvfb-run -a ninja -v -C builddir test

  codecov:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: apt install
      run: sudo apt install -y lcov libgoogle-glog-dev libgtk-3-dev libglib2.0-dev libgstreamer1.0-dev libjsoncpp-dev g++ meson xvfb
    - name: meson
      run: meson -D b_coverage=true builddir
    - name: build
      run: ninja -v -C builddir
    - name: install
      run: sudo ninja -C builddir install
    - name: test
      run: |
        xvfb-run -a ./builddir/src/iptux/libiptux_test
        xvfb-run -a ninja -v -C builddir test
    - name: lcov
      run: |
        lcov --directory . --capture --output-file coverage.info; # capture coverage info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info; # filter out system
        lcov --remove coverage.info '*Test*' --output-file coverage.info; # filter out system
        lcov --remove coverage.info '*gtest*' --output-file coverage.info; # filter out system
        lcov --list coverage.info; #debug info
    - uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
